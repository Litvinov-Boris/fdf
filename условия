General Instructions

• Этот проект будет корректироваться только людьми. Поэтому не стесняйтесь упорядочивать и присваивать имена своим файлам по своему усмотрению, но в рамках ограничений, перечисленных здесь
• Исполняемый файл должен иметь имя fdf.
• Вы должны отправить Makefile.
• Ваш Makefile должен компилировать проект и должен содержать обычные правила. Он не должен перекомпилировать и перекомпоновывать программу без необходимости.
• Если вы умны, вы будете использовать свою библиотеку для своего fdf. Отправьте также свою папку libft, включая собственный Makefile в корень вашего хранилища. Ваш fdf Makefile должен будет скомпилировать библиотеку, а затем скомпилировать ваш проект.
• Вы не можете использовать глобальные переменные.
• Ваш проект должен следовать Норме.
• Вы должны тщательно обрабатывать ошибки. Ваша программа не может неожиданно завершить работу (ошибка сегментации, ошибка шины, двойное освобождение и т. Д.).
• Ваша программа не может иметь утечки памяти.
• Вам нужно будет отправить файл с именем author, содержащим ваше имя пользователя, за которым следует «\ n» в корне вашего хранилища.
• Вы должны использовать miniLibX. Либо в версии, доступной в системе, либо из ее источников. Если вы решите работать с источниками, вам нужно будет применить те же правила для вашего libft, что и написанные выше.
• Для обязательной части вам разрешено использовать следующие функции:
	• open, read, write, close (#include <unistd.h>
								#include <sys/types.h>
								#include <sys/stat.h>
								#include <fcntl.h>)
	• malloc, free(#include <stdlib.h>)
	• perror, strerror(	#include <string.h>
						#include <stdio.h>
						#include <errno.h>)
	• exit(	#include <unistd.h>
			#include <stdlib.h>)
	• Все функции, определенные в математической библиотеке (-lm и man 3 math)
	• Все функции определены в библиотеке miniLibX.
• Вам разрешается использовать другие функции для завершения бонусной части, если их использование оправдано во время вашей оценки. Быть умным!
• Вы можете задать свои вопросы на форуме, Slack и т. Д.

Mandatory part

Этот проект о создании упрощенного графического «каркасного» («fils de fer» на французском языке, отсюда и название проекта) представления рельефного ландшафта, связывающего различные точки (x, y, z) через сегменты. Координаты этого ландшафта хранятся в файле, передаваемом в качестве параметра вашей программе. Вот пример:
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
0  0 10 10  0  0 10 10  0  0  0 10 10 10 10 10  0  0  0
0  0 10 10  0  0 10 10  0  0  0  0  0  0  0 10 10  0  0
0  0 10 10  0  0 10 10  0  0  0  0  0  0  0 10 10  0  0
0  0 10 10 10 10 10 10  0  0  0  0 10 10 10 10  0  0  0
0  0  0 10 10 10 10 10  0  0  0 10 10  0  0  0  0  0  0
0  0  0  0  0  0 10 10  0  0  0 10 10  0  0  0  0  0  0
0  0  0  0  0  0 10 10  0  0  0 10 10 10 10 10 10  0  0
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0

Каждое число соответствует точке в пространстве:
• Горизонтальное положение соответствует его оси.
• Вертикальное положение соответствует его ординате.
• Значение соответствует его высоте.

Не забывайте оптимально использовать свою либфту! Использование get_next_line, ft_split и ft_getnbr позволит вам быстро и просто прочитать данные из файла.

Что касается графического представления:
• У вас должно быть 2 типа проекции, но вы можете свободно выбирать тип проекции: параллельная, изо, коническая.
• Вы должны иметь возможность выйти из программы, нажав клавишу «esc».
• Использование изображений из minilibX настоятельно рекомендуется.
• Найдите прикрепленный двоичный файл с именем fdf, а также пример 42.fdf внутри fdf.zip).

Bonus part

Вот несколько интересных идей о бонусах для создания или даже использования. Конечно, вы можете добавить свои собственные оригинальные бонусы, которые затем будут оцениваться непосредственно вашими корректорами.
Вы получите очки, если сможете:
• Заполните поля цветом в соответствии с высотой (зеленый внизу, затем коричневый, затем белый сверху, например.)
• Укажите цветовой спектр в параметре.
• Правильно управляйте скрытыми поверхностями.
• Изменить типы проекции.

Submission and peer correction

Submit your work on your GiT repository as usual. Only the work on your repository will be graded.
